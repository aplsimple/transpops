The alited is a "project oriented" editor,
not a general purpose one.

It provides nearly all of the necessary
to develop Tcl/Tk projects.

And alited project has been developed
by its own v0.2 since 24 April 2021.
---
The projects seen by alited are stored in
~/.config or a directory chosen at the very
first start of alited. Or passed as the first
argument to alited.

This allows keeping various TYPES of projects
at one machine: public/private, work/fun etc.
---
The projects are listed in "Setup/Projects" menu item.

Also, there is "Projects" icon of the tool bar.

Let's open "Projects".
---
The "default" project refers to alited's
installation directory, just for a start.

Plus, the alited's code may be used
as a source of code snippets viewed at
their work immediately in the alited!

Especially so, if you use "apave" package
the alited is based on.
---
Let's create a new project.

We must fill the appropriate data fields
- most importantly a project directory.
---
After filling the new project's fields
we press "Add" button to create it.
---
Another method to create a project is
"Create a project by template" button.

This method is based on the template of
directory / file tree, in Templates tab.
---
There may be up to 16 templates, all their
names being collected in the combobox.

Let's create a template. After its use,
it is saved in the combobox's values.

To view the result, we can hit "Project
directory" button.
---
Let's open a project.

Just selecting it in the list,
then hitting "Select" button.
---
To open existing file(s) of our project
we can switch to the project file tree.

Then, with double-clicking a file, we open it.

To open all Tcl files of a directory
we use the tree's popup menu. Let's do it.
---
The open files are highlighted in the file tree.

After closing a file, it is unhighlighted.
---
A newly open file is placed to
the beginning of the tab bar.

This is true even when a selected tab
isn't visible in the tab bar.
---
The alited provides basic facilities
for arranging a project's directory:
  - create a file / directory
  - delete a file / directory
  - move file(s) to other directory

These facilities are very basic, for example
directories aren't moved in alited's file tree.

Still, the file tree can help with little things.
---
Let's try "Create File/Directory"
actions on the file tree.
---
To move files in the file tree,
we use nearly the same actions
as in the unit tree.

The alited is rather consistent!
---
When projects are switched,
the alited saves and restores:

  - a list of open files
  - cursor positions in the files
  - a currently open file
  - a list of favorites
  - a list of favorites' lists
---
So, when we switch to another project,
alited closes all files of the old project
and open all files of the new project.

If we want some files of the old project
to remain open in the new project,
we select them in the tab bar by Ctrl+click,
then we switch to the new project.
---
Another way to open files of a project
inside a current one is a file list of
"Projects / Options" dialogue.

The files to be open are selected with
simple clicking them. After that, we
open them from the list's context menu.

Or we open a file with a double-click.
---
This "Projects / Options" dialogue can
be nicely used for a sort of clearance.

It's when a lot of files are (not open,
still annoying) in the tab bar's list.

I.e. when a lot of files need to be
closed / ignored in the project's list
and the lot are very selective.
---
The currently edited files are listed in
the file list available through:

  - right-clicking the tab bar of files
  - choosing "Tools/File List" menu item
  - pressing F9 key (it's customizable)
---
Note that the file list has two separators,
just to see:

  - files of currently visible tabs of the bar
  - left "invisible" files
  - right "invisible" files
---
The detailed info of files can be switched
on/off by "Setup/Tip File Info" menu item.

The file info is available in:

  - the tab bar
  - the file list
  - the file tree
---
The "Projects" dialogue contains "Notes" and
"Reminder" fields to support a development.

The "Notes" are very good for projects that
are developed unsteadily, from time to time,
allowing to keep a list of ideas.

The "Reminder" is very good for all of projects,
allowing to keep deadlines of TODOs.

At last, "Notes" and "Reminder" are both good
at maintaining.
---
The reminders are bound to dates (deadlines).

When a reminder became out-dated, there will
be blinkings and whistlings!
---
If a TODO needs to be postponed, you can
shift it on a day / week with "move" buttons.
---
Last few words about another interesting option.

Its default value is set in "Preferences"
but in "Project" settings it can be reset.
---
The "Unit lines per 1 red bar" option means that
N lines of a unit are considered normal, while
each N additional lines of a unit would add
a red bar to its icon at the unit tree, up to 7th bar.

When the icon becomes fully red, this is like sending
"too long unit" message, i.e. the unit probably needs
some reforming.

There are 8 grades of redness: 0, 1*N, 2*N, 3*N ... 7*N.

If N=10, then 80 (8*10) or more lines mean "too long".

Just look at the unit tree to find those horrible reds,
candidates for reforming.
---
Let's set this option to 5 which would mean
a procedure/method of 40 or more lines will be
fully red marked.
---
This thing is too long, so it's "too red".
Even not too rosy.
---
Welcome to

https://aplsimple.github.io

for further details.

Thanks for your attention.
---
#RUNF1: ../../../alited/src/alited.tcl DEBUG
