# TRANSPOPS_green -background #a7e7a7
# TRANSPOPS_red -background #ffb8b8
The alited editor is "unit oriented".

This means making a unit tree of Tcl code
- branches and leaves.

The branches are created with special comments.

The leaves are Tcl procedures and methods.
---
üó∞ It's the main of alited's profits, because of

  * viewing Tcl/Tk code as a structured stuff

  * navigating the code in the quickest way

  * documenting the code by the structured comments

  * marking the structured units as favorites to
    be open afterwards

  * saving lists of favorites as tasks / subprojects
---
To add a branch, the key combinations are used:

  * Shift+F1 for 1st level

  * Shift+F2 for 2nd level

  * Shift+F3 for 3rd level
---
The keys and comments are customizable.
For example, new levels of branches can be added.

üó∞ At first presentation, the "List of Templates"
dialogue shows its help. Some dialogues of alited
do the same. These presentations of help are
cancelled with "Don't show anymore" check button.
---
To add a procedure / method, the keys are used:

  * Alt+P to add a procedure

  * Alt+M to add a method
---
The unit tree has its own toolbar allowing
to arrange the tree.

The Up / Down buttons allow to move unit(s)
through the tree.
---
A unit can be drag-and-dropped,
a target being before a drop point.

üó∞ A code can be rearranged without Cut / Paste!

Doesn't it often occur to you to change your
mind about placing your procs & methods? ... and
to grouse about "how inconsistent my code is"?
---
To move a group of units, they are freely
selected with Ctrl+click (one by one).

Also, Shift key can be used to select
a range of units, this way:

  * click a first unit of the range

  * press Shift and click a last unit
---
If a selected unit group needs to be moved to
some far location, "Drop selected..." menu item
might be helpful.

The group's units are selected without any order.

üó∞ They are dropped in the order of their sequence.
---
We can even move selected units from one Tcl file
to another.

As you've seen, clicks with Ctrl/Shift keys allow
to select units freely, without any order.
---
The visited units are highlighted in the unit tree
by a color (the same as proc / method of Tcl).

This rule doesn't relate to branches.
---
However, if a unit contains "TODO comments",
it is highlighted with red color, no matter it's
a leaf or a branch.

TODO comments begin with #! so that Unix shebangs
are highlighted in the same manner as TODOs.
---
Alternatively, we can set TODO comments with
"# TODO <...>".

The TODOs are also seen in the tree's tooltips.
---
üó∞ When some lines are commented out
with Edit/Comment menu item, they are marked
as TODO comments which is good:

  * to see the comments as quickly as possible

  * to search them in a session by #! pattern

  * to solve them as they are the real TODOs

Edit/Uncomment menu item restores the lines.
---
The alited's way of commenting allows
to comment out a code with braces, so that
you would not see "strange" Tcl behaviour
due to the commenting-out.

More details are in "Help/alited" docs. üó©
---
At navigating through the unit tree,
the cursor positions are saved/restored
in visited units.

üó∞ We can continue with units in the same
positions we left them.
---
"Search / To Last Visited" or Alt+Backspace
allow to switch between 2 last visited units.

There is "Last Visited" list of units as well.

Let's see how it is populated.
---
The following actions fill "Last Visited" list:

  * click on a unit
  * change a unit's content
  * switch tabs of edited files
  * choose the unit tree's item
  * choose the infobar's item
  * choose the Favorites/Last Visited's item
  * press Alt+Backspace ("To Last Visited")
  * press Alt+B ("To Matched Bracket")
  * press Ctrl+L ("Look for Declaration")
  * press F3, Alt+Q, Alt+W, Alt+Left, Alt+Right
  * undo / redo changes

Nearly all actions with a text lead to updating
"Last Visited" list excepting a simple navigation
with Up / Down/ PageUp / PageDown keys. üó©
---
Some of units may be considered as favorite. If so,
they are appointed favorites with "Favorites" toolbar.

Any current unit (leaf / branch) can be favorite.

The "Favorites" list is per a project.
---
If some favorites' list is considered valuable,
the list can be saved by its own name.

Then, the saved lists can be used as a sort of
"subprojects inside projects" to solve their
appropriate tasks.
---
After pressing Ctrl+Shift+F, "Search Units" bar
is shown, allowing to search units by their case
insensitive glob patterns.

üó∞ VERY useful.
---
The info listbox' context menu allows to
set "Don't focus a text" mode in order to
scan the found units with keys.
---
After pressing Ctrl+G, "Go to Line" dialogue
is shown, allowing to go inside a unit by its
relative number of line.

Useful at getting a Tcl error message with
a proc / method name and a line number.
---
The alited provides a tool to check Tcl code
for some consistencies.

Every proc/method is checked for consistencies
of braces, brackets and quotes as well as for
duplicate unit names. Also a whole of the file
is checked for the consistencies.

üó∞ VERY useful at getting an obscure Tcl error.
---
The checking for consistencies is executed for
a current proc / method before "Run the file"
automatically!

We don't test this now to avoid auto-saving files.

Details on "Run" tool are in "5. Tools" demo. üó©
# TRANSPOPS_red
---
At checking Tcl code, a whole content of a unit
has to be checked from its start to a next unit's.

Some "errors" are natural and eliminated by
"END of namespace" or similar branches which
are good for documentation / visibility as well.
---
If a unit contains inconsistent braces,
it cannot be moved by means of the tree,
because it is obviously either incomplete
or somehow related to the unit structure.

In such cases, only the cut-and-paste can
help with moving units.
---
By the way, did you notice the red bar icons
at the leaves of the unit tree?

üó∞ They mean "the more red the more long".

Thus, the redness is like a message:
Beware, this unit needs to be refactored!
---
The tree of units and the tree of project files
are switched to / from by appropriate buttons.

The file tree is detailed in "3. Projects" demo. üó©
---
Welcome to

https://aplsimple.github.io

for further details.

Thanks for your attention. üëç
---
#RUNF1: ../../../alited/src/alited.tcl DEBUG
